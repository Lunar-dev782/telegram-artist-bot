import asyncio
import logging
from aiohttp import web
from aiogram import Bot, Dispatcher
from aiogram.fsm.storage.memory import MemoryStorage
from aiogram.types import Update
from bot import router, TOKEN 

# –¢–æ–∫–µ–Ω —Ç–∞ URL 

TOKEN = "7645134499:AAFRfwsn7dr5W2m81gCJPwX944PRqk-sjEc" 
WEBHOOK_URL = "https://telegram-artist-bot-f1nz.onrender.com" 
WEBHOOK_PATH = "/webhook/telegram" 

# –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è Bot
bot = Bot(token=TOKEN)

# –°—Ç–≤–æ—Ä—é—î–º–æ storage –¥–ª—è Dispatcher
storage = MemoryStorage()

# –°—Ç–≤–æ—Ä—é—î–º–æ Dispatcher
dp = Dispatcher(storage=MemoryStorage())

# –ü—ñ–¥–∫–ª—é—á–∞—î–º–æ router –¥–æ Dispatcher
dp.include_router(router)

# –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è –≤–µ–±—Ö—É–∫–∞
async def on_startup(app):
    try:
        # –í—Å—Ç–∞–Ω–æ–≤–ª—é—î–º–æ –≤–µ–±—Ö—É–∫
        await bot.set_webhook(WEBHOOK_URL + WEBHOOK_PATH)
        logging.info(f"‚úÖ Webhook –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ: {WEBHOOK_URL}{WEBHOOK_PATH}")
    except Exception as e:
        logging.error(f"‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ñ –≤–µ–±—Ö—É–∫–∞: {e}")

 #–û–±—Ä–æ–±–∫–∞ –∑–∞–ø–∏—Ç—É –≤–µ–±—Ö—É–∫–∞
async def handle_webhook(request):
    try:
        data = await request.json()
        update = Update(**data)
        logging.info(f"üì≤ –û—Ç—Ä–∏–º–∞–Ω–æ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è: {update}")

        # –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ –∫–æ—Ä–µ–∫—Ç–Ω–∏–π –º–µ—Ç–æ–¥
        await dp.feed_update(bot, update)  # ‚úÖ –í–∏–ø—Ä–∞–≤–ª–µ–Ω–æ

        return web.Response(status=200)
    except Exception as e:
        logging.error(f"‚ùå –ü–æ–º–∏–ª–∫–∞ –æ–±—Ä–æ–±–∫–∏ –∑–∞–ø–∏—Ç—É: {e}")
        return web.Response(status=500)


# ‚úÖ –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —Å—Ç–∞–Ω—É —Å–µ—Ä–≤–µ—Ä–∞ (Uptime Robot)
async def health_check(request):
    return web.json_response({"status": "running", "webhook": WEBHOOK_URL + WEBHOOK_PATH})

# üî• –û—Å–Ω–æ–≤–Ω–∞ —Ñ—É–Ω–∫—Ü—ñ—è –∑–∞–ø—É—Å–∫—É —Å–µ—Ä–≤–µ—Ä–∞
def main():
    logging.basicConfig(level=logging.INFO)

    # –°—Ç–≤–æ—Ä–µ–Ω–Ω—è —Ç–∞ –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –¥–æ–¥–∞—Ç–∫–∞ aiohttp
    app = web.Application()
    app.router.add_post(WEBHOOK_PATH, handle_webhook)
    app.router.add_get("/", health_check)  # –î–æ–¥–∞—î–º–æ –º–∞—Ä—à—Ä—É—Ç –¥–ª—è Uptime Robot
    app.on_startup.append(on_startup)

    try:
        logging.info("üöÄ –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–µ—Ä–∞ –Ω–∞ –ø–æ—Ä—Ç—É 8000...")
        web.run_app(app, host="0.0.0.0", port=8000)
    except Exception as e:
        logging.error(f"‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫—É —Å–µ—Ä–≤–µ—Ä—É: {e}")
    except (KeyboardInterrupt, SystemExit):
        logging.info("üõë –ë–æ—Ç –∑–∞–≤–µ—Ä—à–∏–≤ —Ä–æ–±–æ—Ç—É")

# üîß –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
if __name__ == "__main__":
    try:
        main()
    except Exception as e:
        logging.error(f"‚ùå –§–∞—Ç–∞–ª—å–Ω–∞ –ø–æ–º–∏–ª–∫–∞: {e}")
    finally:
        # –ó–∞–∫—Ä–∏–≤–∞—î–º–æ —Å–µ—Å—ñ—é –±–æ—Ç–∞ –ø—ñ—Å–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—è –≤—Å—ñ—Ö –æ–ø–µ—Ä–∞—Ü—ñ–π
        bot.session.close()  
