import os
import re
import time
import json
import random
import asyncio
import logging
import traceback
from datetime import datetime, timedelta
from typing import List  # ‚úÖ –î–æ–¥–∞–Ω–æ!

from supabase import create_client, Client

from aiogram import Bot, Dispatcher, Router, F, types
from aiogram.enums import ParseMode
from aiogram.client.default import DefaultBotProperties
from aiogram.fsm.storage.memory import MemoryStorage
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import StatesGroup, State
from aiogram.filters import Command, StateFilter, CommandStart
from aiogram.exceptions import (
    TelegramBadRequest,
    TelegramNotFound,
    TelegramRetryAfter,
)
from aiogram.types import (
    Message,
    ContentType,
    InlineKeyboardMarkup,
    InlineKeyboardButton,
    CallbackQuery,
    ReplyKeyboardMarkup,
    KeyboardButton,
    InputMediaPhoto,  # ‚úÖ –î–æ–¥–∞–Ω–æ!
    error_event,
)
from aiogram.types.error_event import ErrorEvent

# üîê –¢–æ–∫–µ–Ω –±–æ—Ç–∞
TOKEN = "7645134499:AAFRfwsn7dr5W2m81gCJPwX944PRqk-sjEc"
ADMIN_CHAT_ID = -1002802098163  # ‚úÖ –ù–µ –∑–∞–±—É–¥—å –≤–∫–∞–∑–∞—Ç–∏ –ø—Ä–∞–≤–∏–ª—å–Ω–∏–π ID

# ü§ñ –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è –±–æ—Ç–∞
bobot = Bot(
    token=TOKEN,
    default=DefaultBotProperties(parse_mode=ParseMode.HTML)
)

bot = Bot(token=TOKEN)
storage = MemoryStorage()
router = Router()  

# üîå –î–∞–Ω—ñ –¥–ª—è Supabase
SUPABASE_URL = "https://clbcovdeoahrmxaoijyt.supabase.co"
SUPABASE_ANON_KEY = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImNsYmNvdmRlb2Focm14YW9panl0Iiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTIxNTc4NTAsImV4cCI6MjA2NzczMzg1MH0.dxwJhTZ9ei4dOnxmCvGztb8pfUqTlprfd0-woF6Y-lY"

supabase: Client = create_client(SUPABASE_URL, SUPABASE_ANON_KEY)

# üìã –°—Ç–∞–Ω –º–∞—à–∏–Ω–∏
class Form(StatesGroup):
    category = State()
    description = State()
    socials = State()
    images = State()

# üü¢ /start
@router.message(CommandStart())
async def cmd_start(message: Message, state: FSMContext):
    await message.answer(
        "üé® –í—ñ—Ç–∞—î–º–æ —É —Å–ø—ñ–ª—å–Ω–æ—Ç—ñ!\n–û–±–µ—Ä–∏ –∫–∞—Ç–µ–≥–æ—Ä—ñ—é:",
        reply_markup=ReplyKeyboardMarkup(
            keyboard=[
                [KeyboardButton(text="üêæ –ê–¥–æ–ø—Ç–∏")],
                [KeyboardButton(text="üé® –ö–æ–º—ñ—à—ñ / –ü—Ä–∞–π—Å–∏")],
                [KeyboardButton(text="üßµ –†–µ–∫–≤–µ—Å—Ç–∏")],
            ],
            resize_keyboard=True
        )
    )
    await state.set_state(Form.category)

# üü¢ –ö–∞—Ç–µ–≥–æ—Ä—ñ—è
@router.message(Form.category)
async def get_category(message: Message, state: FSMContext):
    await state.update_data(category=message.text)
    await message.answer("üìù –û–ø–∏—à–∏ –ø–æ—Å—Ç –¥–ª—è –ø—É–±–ª—ñ–∫–∞—Ü—ñ—ó (–±–µ–∑ –ø–æ—Å–∏–ª–∞–Ω—å):")
    await state.set_state(Form.description)

# üü¢ –û–ø–∏—Å
@router.message(Form.description)
async def get_description(message: Message, state: FSMContext):
    await state.update_data(description=message.text)
    await message.answer("üåê –í–∫–∞–∂–∏ —Å–æ—Ü–º–µ—Ä–µ–∂—ñ (—Ñ–æ—Ä–º–∞—Ç):\nInstagram: @–Ω—ñ–∫\nTelegram: @–Ω—ñ–∫–Ω–µ–π–º")
    await state.set_state(Form.socials)

# üü¢ –°–æ—Ü–º–µ—Ä–µ–∂—ñ
@router.message(Form.socials)
async def get_socials(message: Message, state: FSMContext):
    await state.update_data(socials=message.text)
    await message.answer("üì∏ –ù–∞–¥—ñ—à–ª–∏ –¥–æ 5 –∑–æ–±—Ä–∞–∂–µ–Ω—å –¥–ª—è –ø—É–±–ª—ñ–∫–∞—Ü—ñ—ó")
    await state.set_state(Form.images)

# üü¢ –§–æ—Ç–æ
@router.message(Form.images, F.photo)
async def get_images(message: Message, state: FSMContext):
    data = await state.get_data()
    photos = data.get("photos", [])
    photos.append(message.photo[-1].file_id)

    if len(photos) >= 5:
        await message.answer("‚úÖ –î—è–∫—É—é! –ù–∞–¥—ñ—Å–ª–∞–Ω–æ –Ω–∞ –ø–µ—Ä–µ–≤—ñ—Ä–∫—É.")
        await finish_submission(message.from_user, state, photos)
    else:
        await state.update_data(photos=photos)
        await message.answer(f"–ó–æ–±—Ä–∞–∂–µ–Ω–Ω—è –ø—Ä–∏–π–Ω—è—Ç–æ ({len(photos)}/5). –ù–∞–¥—ñ—à–ª–∏ —â–µ –∞–±–æ –Ω–∞—Ç–∏—Å–Ω–∏ /done.")

# ‚úÖ /done
@router.message(Form.images, F.text == "/done")
async def done_images(message: Message, state: FSMContext):
    data = await state.get_data()
    photos = data.get("photos", [])
    if not photos:
        await message.answer("‚ö†Ô∏è –°–ø–æ—á–∞—Ç–∫—É –Ω–∞–¥—ñ—à–ª–∏ —Ö–æ—á–∞ –± 1 –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è.")
        return
    await message.answer("‚úÖ –î—è–∫—É—é! –ù–∞–¥—ñ—Å–ª–∞–Ω–æ –Ω–∞ –ø–µ—Ä–µ–≤—ñ—Ä–∫—É.")
    await finish_submission(message.from_user, state, photos)

# ‚úÖ –§—ñ–Ω–∞–ª—å–Ω–∞ –æ–±—Ä–æ–±–∫–∞
async def finish_submission(user: types.User, state: FSMContext, photos: List[str]):
    data = await state.get_data()
    await state.clear()

    text = (
        f"üì• <b>–ù–æ–≤–∞ –∑–∞—è–≤–∫–∞ –≤—ñ–¥</b> @{user.username or user.first_name}\n"
        f"<b>–ö–∞—Ç–µ–≥–æ—Ä—ñ—è:</b> {data['category']}\n"
        f"<b>–û–ø–∏—Å:</b> {data['description']}\n"
        f"<b>–°–æ—Ü–º–µ—Ä–µ–∂—ñ:</b>\n{data['socials']}"
    )

    media = [InputMediaPhoto(media=photos[0], caption=text)]
    for p in photos[1:]:
        media.append(InputMediaPhoto(media=p))

    await bot.send_media_group(chat_id=ADMIN_CHAT_ID, media=media)

    supabase.table("submissions").insert({
        "user_id": user.id,
        "username": user.username,
        "category": data["category"],
        "description": data["description"],
        "socials": data["socials"],
        "images": photos,
    }).execute()

# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
async def main():
    await router.start_polling(bot)  # –ó–∞–ø—É—Å–∫–∞—î–º–æ polling –∑ router

if __name__ == "__main__":
    import asyncio
    asyncio.run(main())
