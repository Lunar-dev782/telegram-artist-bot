import os
import asyncio
from aiogram import Bot, Dispatcher, types, F
from aiogram.enums import ParseMode
from aiogram.fsm.context import FSMContext
from aiogram.fsm.storage.memory import MemoryStorage
from aiogram.fsm.state import StatesGroup, State
from aiogram.client.default import DefaultBotProperties
from aiogram.filters import CommandStart
from aiogram.types import Message, InputMediaPhoto, FSInputFile
from supabase import create_client
from typing import List

# üîê –ö–æ–Ω—Å—Ç–∞–Ω—Ç–∏
BOT_TOKEN = "7645134499:AAFRfwsn7dr5W2m81gCJPwX944PRqk-sjEc"
ADMIN_CHAT = -1002802098163
SUPA_URL = "https://clbcovdeoahrmxaoijyt.supabase.co"
SUPA_KEY = "—Ç—É—Ç —Ç–≤—ñ–π service_role –∫–ª—é—á"

# ‚úÖ –°—Ç–≤–æ—Ä–µ–Ω–Ω—è –±–æ—Ç–∞ –ø—Ä–∞–≤–∏–ª—å–Ω–æ –¥–ª—è aiogram 3.7+
bot = Bot(
    token=BOT_TOKEN,
    default=DefaultBotProperties(parse_mode=ParseMode.HTML)
)
dp = Dispatcher(storage=MemoryStorage())

# üîó –ü—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è –¥–æ Supabase
supabase = create_client(SUPA_URL, SUPA_KEY)

# üìã FSM —Å—Ç–∞–Ω–∏
class Form(StatesGroup):
    category = State()
    description = State()
    socials = State()
    images = State()

# üü¢ /start —Ö–µ–Ω–¥–ª–µ—Ä
@dp.message(CommandStart())
async def cmd_start(message: Message, state: FSMContext):
    await message.answer(
        "üé® –í—ñ—Ç–∞—î–º–æ —É —Å–ø—ñ–ª—å–Ω–æ—Ç—ñ!\n–û–±–µ—Ä–∏ –∫–∞—Ç–µ–≥–æ—Ä—ñ—é:",
        reply_markup=types.ReplyKeyboardMarkup(
            keyboard=[
                [types.KeyboardButton(text="üêæ –ê–¥–æ–ø—Ç–∏")],
                [types.KeyboardButton(text="üé® –ö–æ–º—ñ—à—ñ / –ü—Ä–∞–π—Å–∏")],
                [types.KeyboardButton(text="üßµ –†–µ–∫–≤–µ—Å—Ç–∏")],
            ],
            resize_keyboard=True
        )
    )
    await state.set_state(Form.category)

# üü¢ –ö–∞—Ç–µ–≥–æ—Ä—ñ—è
@dp.message(Form.category)
async def get_category(message: Message, state: FSMContext):
    await state.update_data(category=message.text)
    await message.answer("üìù –û–ø–∏—à–∏ –ø–æ—Å—Ç –¥–ª—è –ø—É–±–ª—ñ–∫–∞—Ü—ñ—ó (–±–µ–∑ –ø–æ—Å–∏–ª–∞–Ω—å):")
    await state.set_state(Form.description)

# üü¢ –û–ø–∏—Å
@dp.message(Form.description)
async def get_description(message: Message, state: FSMContext):
    await state.update_data(description=message.text)
    await message.answer("üåê –í–∫–∞–∂–∏ —Å–æ—Ü–º–µ—Ä–µ–∂—ñ (—Ñ–æ—Ä–º–∞—Ç):\nInstagram: @–Ω—ñ–∫\nTelegram: @–Ω—ñ–∫–Ω–µ–π–º")
    await state.set_state(Form.socials)

# üü¢ –°–æ—Ü–º–µ—Ä–µ–∂—ñ
@dp.message(Form.socials)
async def get_socials(message: Message, state: FSMContext):
    await state.update_data(socials=message.text)
    await message.answer("üì∏ –ù–∞–¥—ñ—à–ª–∏ –¥–æ 5 –∑–æ–±—Ä–∞–∂–µ–Ω—å –¥–ª—è –ø—É–±–ª—ñ–∫–∞—Ü—ñ—ó")
    await state.set_state(Form.images)

# üü¢ –ó–æ–±—Ä–∞–∂–µ–Ω–Ω—è
@dp.message(Form.images, F.photo)
async def get_images(message: Message, state: FSMContext):
    data = await state.get_data()
    photos = data.get("photos", [])
    photos.append(message.photo[-1].file_id)

    if len(photos) >= 5:
        await message.answer("‚úÖ –î—è–∫—É—é! –ù–∞–¥—ñ—Å–ª–∞–Ω–æ –Ω–∞ –ø–µ—Ä–µ–≤—ñ—Ä–∫—É.")
        await finish_submission(message.from_user, state, photos)
    else:
        await state.update_data(photos=photos)
        await message.answer(f"–ó–æ–±—Ä–∞–∂–µ–Ω–Ω—è –ø—Ä–∏–π–Ω—è—Ç–æ ({len(photos)}/5). –ù–∞–¥—ñ—à–ª–∏ —â–µ –∞–±–æ –Ω–∞—Ç–∏—Å–Ω–∏ /done.")

# ‚úÖ /done ‚Äî —è–∫—â–æ –º–µ–Ω—à–µ –Ω—ñ–∂ 5 –∑–æ–±—Ä–∞–∂–µ–Ω—å
@dp.message(Form.images, F.text == "/done")
async def done_images(message: Message, state: FSMContext):
    data = await state.get_data()
    photos = data.get("photos", [])
    if not photos:
        await message.answer("‚ö†Ô∏è –°–ø–æ—á–∞—Ç–∫—É –Ω–∞–¥—ñ—à–ª–∏ —Ö–æ—á–∞ –± 1 –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è.")
        return
    await message.answer("‚úÖ –î—è–∫—É—é! –ù–∞–¥—ñ—Å–ª–∞–Ω–æ –Ω–∞ –ø–µ—Ä–µ–≤—ñ—Ä–∫—É.")
    await finish_submission(message.from_user, state, photos)

# ‚úÖ –§—ñ–Ω–∞–ª—å–Ω–∞ –æ–±—Ä–æ–±–∫–∞
async def finish_submission(user, state: FSMContext, photos: List[str]):
    data = await state.get_data()
    await state.clear()

    # üì• –§–æ—Ä–º—É–≤–∞–Ω–Ω—è –∑–∞—è–≤–∫–∏
    text = (
        f"üì• <b>–ù–æ–≤–∞ –∑–∞—è–≤–∫–∞ –≤—ñ–¥</b> @{user.username or user.first_name}\n"
        f"<b>–ö–∞—Ç–µ–≥–æ—Ä—ñ—è:</b> {data['category']}\n"
        f"<b>–û–ø–∏—Å:</b> {data['description']}\n"
        f"<b>–°–æ—Ü–º–µ—Ä–µ–∂—ñ:</b>\n{data['socials']}"
    )

    # ‚¨ÜÔ∏è –í—ñ–¥–ø—Ä–∞–≤–∫–∞ –≤ –∞–¥–º—ñ–Ω-—á–∞—Ç
    media = [InputMediaPhoto(media=photos[0], caption=text)]
    for p in photos[1:]:
        media.append(InputMediaPhoto(media=p))

    await bot.send_media_group(chat_id=ADMIN_CHAT, media=media)

    # üíæ –ó–∞–ø–∏—Å —É Supabase
    supabase.table("submissions").insert({
        "user_id": user.id,
        "username": user.username,
        "category": data["category"],
        "description": data["description"],
        "socials": data["socials"],
        "images": photos,
    }).execute()

# üü¢ –°—Ç–∞—Ä—Ç –±–æ—Ç–∞
async def main():
    await dp.start_polling(bot)

if __name__ == "__main__":
    asyncio.run(main())
